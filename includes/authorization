<h1 id='93900fccba'>Авторизация</h1><h2 id='jwt'>JWT-токен</h2>
<blockquote>
<p>Запрос и получение JWT токена:</p>
</blockquote>
<div class="highlight"><pre class="highlight ruby tab-ruby"><code><span class="nb">require</span> <span class="s1">'openssl'</span>
<span class="nb">require</span> <span class="s1">'base64'</span>
<span class="nb">require</span> <span class="s1">'json'</span>
<span class="nb">require</span> <span class="s1">'securerandom'</span>
<span class="nb">require</span> <span class="s1">'jwt'</span>
<span class="nb">require</span> <span class="s1">'active_support/time'</span>
<span class="nb">require</span> <span class="s1">'net/http'</span>
<span class="nb">require</span> <span class="s1">'net/https'</span>


<span class="n">host</span> <span class="o">=</span> <span class="s1">'garantex.io'</span> <span class="c1"># для тестового сервера используйте stage.garantex.biz</span>
<span class="n">private_key</span> <span class="o">=</span> <span class="s1">'{приватный ключ, полученный на этапе создания API ключей}'</span>
<span class="n">uid</span> <span class="o">=</span> <span class="s1">'{UID, полученный на этапе создания API ключей}'</span>

<span class="n">secret_key</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="p">.</span><span class="nf">read</span><span class="p">(</span><span class="no">Base64</span><span class="p">.</span><span class="nf">urlsafe_decode64</span><span class="p">(</span><span class="n">private_key</span><span class="p">))</span>
<span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
    <span class="ss">exp: </span><span class="mi">1</span><span class="p">.</span><span class="nf">hours</span><span class="p">.</span><span class="nf">from_now</span><span class="p">.</span><span class="nf">to_i</span><span class="p">,</span> <span class="c1"># JWT Request TTL in seconds since epoch</span>
    <span class="ss">jti: </span><span class="no">SecureRandom</span><span class="p">.</span><span class="nf">hex</span><span class="p">(</span><span class="mi">12</span><span class="p">).</span><span class="nf">upcase</span>
<span class="p">}</span>
<span class="n">jwt_token</span> <span class="o">=</span> <span class="no">JWT</span><span class="p">.</span><span class="nf">encode</span><span class="p">(</span><span class="n">payload</span><span class="p">,</span> <span class="n">secret_key</span><span class="p">,</span> <span class="s1">'RS256'</span><span class="p">)</span>

<span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s2">"https://dauth.</span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2">/api/v1/sessions/generate_jwt"</span><span class="p">)</span>

<span class="n">http</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">uri</span><span class="p">.</span><span class="nf">host</span><span class="p">,</span> <span class="n">uri</span><span class="p">.</span><span class="nf">port</span><span class="p">)</span>
<span class="n">http</span><span class="p">.</span><span class="nf">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
<span class="n">request</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">::</span><span class="no">Post</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">uri</span><span class="p">.</span><span class="nf">path</span><span class="p">,</span> <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span><span class="p">)</span>
<span class="n">request</span><span class="p">.</span><span class="nf">body</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">kid: </span><span class="n">uid</span><span class="p">,</span> <span class="ss">jwt_token: </span><span class="n">jwt_token</span> <span class="p">}.</span><span class="nf">to_json</span>
<span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="nf">start</span> <span class="p">{</span><span class="o">|</span><span class="n">h</span><span class="o">|</span> <span class="n">h</span><span class="p">.</span><span class="nf">request</span><span class="p">(</span><span class="n">request</span><span class="p">)}</span>
<span class="n">data</span> <span class="o">=</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span> <span class="n">response</span><span class="p">.</span><span class="nf">body</span>
<span class="n">token</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'token'</span><span class="p">]</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>
<span class="c1">// composer require lcobucci/jwt</span>

<span class="c1">// require __DIR__ . '/vendor/autoload.php';</span>
<span class="kn">use</span> <span class="nn">Lcobucci\JWT\Builder</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Lcobucci\JWT\Signer\Key</span><span class="p">;</span>
<span class="kn">use</span> <span class="nn">Lcobucci\JWT\Signer\Rsa\Sha256</span><span class="p">;</span>

<span class="nv">$host</span> <span class="o">=</span> <span class="s1">'garantex.io'</span><span class="p">;</span> <span class="c1">// для тестового сервера используйте stage.garantex.biz</span>
<span class="nv">$private_key</span> <span class="o">=</span> <span class="s1">'{приватный ключ, полученный на этапе создания API ключей}'</span><span class="p">;</span>
<span class="nv">$uid</span> <span class="o">=</span> <span class="s1">'{UID, полученный на этапе создания API ключей}'</span><span class="p">;</span>

<span class="nv">$time</span>       <span class="o">=</span> <span class="nb">time</span><span class="p">();</span>
<span class="nv">$signer</span>     <span class="o">=</span> <span class="k">new</span> <span class="nx">Sha256</span><span class="p">();</span>
<span class="nv">$privateKey</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Key</span><span class="p">(</span><span class="nb">base64_decode</span><span class="p">(</span><span class="nv">$private_key</span><span class="p">,</span> <span class="kc">true</span><span class="p">));</span>
<span class="nv">$token</span>      <span class="o">=</span> <span class="p">(</span><span class="k">new</span> <span class="nx">Builder</span><span class="p">())</span><span class="o">-&gt;</span><span class="na">identifiedBy</span><span class="p">(</span><span class="nb">bin2hex</span><span class="p">(</span><span class="nb">random_bytes</span><span class="p">(</span><span class="mi">12</span><span class="p">)))</span>
                             <span class="o">-&gt;</span><span class="na">expiresAt</span><span class="p">(</span><span class="nv">$time</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">*</span> <span class="mi">3600</span><span class="p">)</span> <span class="c1">// JWT Request TTL in seconds since epoch</span>
                             <span class="o">-&gt;</span><span class="na">getToken</span><span class="p">(</span><span class="nv">$signer</span><span class="p">,</span> <span class="nv">$privateKey</span><span class="p">);</span>

<span class="nv">$post_data</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'kid'</span> <span class="o">=&gt;</span> <span class="nv">$uid</span><span class="p">,</span> <span class="s1">'jwt_token'</span> <span class="o">=&gt;</span> <span class="nb">strval</span><span class="p">(</span><span class="nv">$token</span><span class="p">)];</span>

<span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="s2">"https://dauth.</span><span class="nv">$host</span><span class="s2">/api/v1/sessions/generate_jwt"</span><span class="p">);</span>

<span class="nb">curl_setopt_array</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="p">[</span>
    <span class="nx">CURLOPT_POST</span>           <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nx">CURLOPT_RETURNTRANSFER</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nx">CURLOPT_HTTPHEADER</span>     <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">'Content-Type: application/json'</span><span class="p">],</span>
    <span class="nx">CURLOPT_POSTFIELDS</span>     <span class="o">=&gt;</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$post_data</span><span class="p">)</span>
<span class="p">]);</span>

<span class="nv">$response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLINFO_HTTP_CODE</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">)</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">'Server error: '</span> <span class="o">.</span> <span class="nv">$response</span><span class="p">);</span>

<span class="nv">$token_data</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

<span class="nb">var_dump</span><span class="p">([</span><span class="s1">'$token_data'</span> <span class="o">=&gt;</span> <span class="nv">$token_data</span><span class="p">]);</span>
<span class="nv">$token</span> <span class="o">=</span> <span class="nv">$token_data</span><span class="p">[</span><span class="s1">'token'</span><span class="p">];</span>

</code></pre></div><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="c1">// Модули</span>
<span class="kd">const</span> <span class="nx">axios</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">axios</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// npm i axios</span>
<span class="kd">const</span> <span class="nx">jwt</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">jsonwebtoken</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// npm i jsonwebtoken</span>
<span class="kd">const</span> <span class="nx">crypto</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">crypto</span><span class="dl">"</span><span class="p">);</span>

<span class="c1">// Константы</span>
<span class="kd">const</span> <span class="nx">host</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">garantex.io</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// для тестового сервера используйте stage.garantex.biz</span>
<span class="kd">const</span> <span class="nx">privateKey</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">***</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// приватный ключ, полученный на этапе создания API ключей</span>
<span class="kd">const</span> <span class="nx">uid</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">***</span><span class="dl">"</span><span class="p">;</span> <span class="c1">// UID, полученный на этапе создания API ключей</span>

<span class="c1">// Получаем токен</span>
<span class="kd">const</span> <span class="nx">getToken</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span>
      <span class="dl">"</span><span class="s2">https://dauth.</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">host</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/api/v1/sessions/generate_jwt</span><span class="dl">"</span><span class="p">,</span>
      <span class="p">{</span>
        <span class="na">kid</span><span class="p">:</span> <span class="nx">uid</span><span class="p">,</span>
        <span class="na">jwt_token</span><span class="p">:</span> <span class="nx">jwt</span><span class="p">.</span><span class="nx">sign</span><span class="p">(</span>
          <span class="p">{</span>
            <span class="na">exp</span><span class="p">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">)</span> <span class="o">+</span> <span class="mi">30</span> <span class="o">*</span> <span class="mi">60</span><span class="p">,</span> <span class="c1">// JWT Request TTL: 30 minutes</span>
            <span class="na">jti</span><span class="p">:</span> <span class="nx">crypto</span><span class="p">.</span><span class="nx">randomBytes</span><span class="p">(</span><span class="mi">12</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="dl">"</span><span class="s2">hex</span><span class="dl">"</span><span class="p">),</span>
          <span class="p">},</span>
          <span class="k">new</span> <span class="nx">Buffer</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">privateKey</span><span class="p">,</span> <span class="dl">"</span><span class="s2">base64</span><span class="dl">"</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="dl">"</span><span class="s2">ascii</span><span class="dl">"</span><span class="p">),</span>
          <span class="p">{</span> <span class="na">algorithm</span><span class="p">:</span> <span class="dl">"</span><span class="s2">RS256</span><span class="dl">"</span> <span class="p">}</span>
        <span class="p">),</span>
      <span class="p">}</span>
    <span class="p">);</span>
    <span class="k">return</span> <span class="nx">data</span><span class="p">.</span><span class="nx">token</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Тест работоспособности</span>
<span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span>
      <span class="dl">"</span><span class="s2">https://</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">host</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/api/v2/orders/clear</span><span class="dl">"</span><span class="p">,</span>
      <span class="kc">null</span><span class="p">,</span>
      <span class="p">{</span>
        <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
          <span class="na">Authorization</span><span class="p">:</span> <span class="s2">`Bearer </span><span class="p">${</span><span class="k">await</span> <span class="nx">getToken</span><span class="p">()}</span><span class="s2">`</span><span class="p">,</span>
        <span class="p">},</span>
      <span class="p">}</span>
    <span class="p">);</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">error</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">})();</span>
</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="c1"># requirements:
# pip3 install 'pyjwt[crypto]'
</span>
<span class="kn">import</span> <span class="nn">base64</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">datetime</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">jwt</span>

<span class="n">private_key</span> <span class="o">=</span> <span class="s">'{приватный ключ, полученный на этапе создания API ключей}'</span>
<span class="n">uid</span> <span class="o">=</span> <span class="s">'{UID, полученный на этапе создания API ключей}'</span>
<span class="n">host</span> <span class="o">=</span> <span class="s">'garantex.io'</span> <span class="c1"># для тестового сервера используйте stage.garantex.biz
</span>
<span class="n">key</span> <span class="o">=</span> <span class="n">base64</span><span class="p">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">private_key</span><span class="p">)</span>
<span class="n">iat</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">mktime</span><span class="p">(</span><span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="n">now</span><span class="p">().</span><span class="n">timetuple</span><span class="p">()))</span>

<span class="n">claims</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"exp"</span><span class="p">:</span> <span class="n">iat</span> <span class="o">+</span> <span class="mi">1</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="p">,</span> <span class="c1"># JWT Request TTL in seconds since epoch
</span>    <span class="s">"jti"</span><span class="p">:</span> <span class="nb">hex</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">getrandbits</span><span class="p">(</span><span class="mi">12</span><span class="p">)).</span><span class="n">upper</span><span class="p">()</span>
<span class="p">}</span>

<span class="n">jwt_token</span> <span class="o">=</span> <span class="n">jwt</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="n">claims</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="n">algorithm</span><span class="o">=</span><span class="s">"RS256"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"JWT request token: %s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">jwt_token</span><span class="p">)</span>

<span class="n">ret</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://dauth.'</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="s">'/api/v1/sessions/generate_jwt'</span><span class="p">,</span>
                    <span class="n">json</span><span class="o">=</span><span class="p">{</span><span class="s">'kid'</span><span class="p">:</span> <span class="n">uid</span><span class="p">,</span> <span class="s">'jwt_token'</span><span class="p">:</span> <span class="n">jwt_token</span><span class="p">})</span>

<span class="k">print</span><span class="p">(</span><span class="s">"JWT response code: %d"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">status_code</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"JWY response text: %s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">token</span> <span class="o">=</span> <span class="n">ret</span><span class="p">.</span><span class="n">json</span><span class="p">().</span><span class="n">get</span><span class="p">(</span><span class="s">'token'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"JWT token: %s</span><span class="se">\n</span><span class="s">"</span> <span class="o">%</span> <span class="n">token</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading.Tasks</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IdentityModel.Tokens.Jwt</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net.Http</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Security.Claims</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Security.Cryptography</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Microsoft.IdentityModel.Tokens</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Newtonsoft.Json</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">grx_asp</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="n">privateKey</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">ReadAllText</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="nf">GetFolderPath</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">SpecialFolder</span><span class="p">.</span><span class="n">MyDocuments</span><span class="p">)</span> <span class="p">+</span> <span class="s">@"\priv.txt"</span><span class="p">,</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">);</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="n">uid</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">ReadAllText</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="nf">GetFolderPath</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">SpecialFolder</span><span class="p">.</span><span class="n">MyDocuments</span><span class="p">)</span> <span class="p">+</span> <span class="s">@"\uid.txt"</span><span class="p">,</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">);</span>

        <span class="k">static</span> <span class="k">async</span> <span class="n">Task</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Use this line to see the crypto info while debugging:</span>
            <span class="c1">// Microsoft.IdentityModel.Logging.IdentityModelEventSource.ShowPII = true;</span>

            <span class="kt">byte</span><span class="p">[]</span> <span class="n">key</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="nf">FromBase64String</span><span class="p">(</span><span class="n">privateKey</span><span class="p">);</span>
            <span class="n">RSA</span> <span class="n">rsa</span> <span class="p">=</span> <span class="n">RSA</span><span class="p">.</span><span class="nf">Create</span><span class="p">();</span>
            <span class="n">rsa</span><span class="p">.</span><span class="nf">ImportFromPem</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="nf">GetChars</span><span class="p">(</span><span class="n">key</span><span class="p">));</span>

            <span class="kt">var</span> <span class="n">claims</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">Claim</span><span class="p">&gt;</span>
            <span class="p">{</span>
              <span class="k">new</span> <span class="nf">Claim</span><span class="p">(</span><span class="n">JwtRegisteredClaimNames</span><span class="p">.</span><span class="n">Jti</span><span class="p">,</span> <span class="n">Guid</span><span class="p">.</span><span class="nf">NewGuid</span><span class="p">().</span><span class="nf">ToString</span><span class="p">()),</span>
              <span class="k">new</span> <span class="nf">Claim</span><span class="p">(</span><span class="n">JwtRegisteredClaimNames</span><span class="p">.</span><span class="n">Exp</span><span class="p">,</span> <span class="n">DateTimeOffset</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="nf">AddMinutes</span><span class="p">(</span><span class="m">60</span><span class="p">).</span><span class="nf">ToUnixTimeSeconds</span><span class="p">().</span><span class="nf">ToString</span><span class="p">())</span>
            <span class="p">};</span>

            <span class="n">SigningCredentials</span> <span class="n">credentials</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">SigningCredentials</span><span class="p">(</span><span class="k">new</span> <span class="nf">RsaSecurityKey</span><span class="p">(</span><span class="n">rsa</span><span class="p">),</span> <span class="n">SecurityAlgorithms</span><span class="p">.</span><span class="n">RsaSha256</span><span class="p">);</span>
            <span class="n">JwtSecurityToken</span> <span class="n">jwtSecurity</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">JwtSecurityToken</span><span class="p">(</span><span class="k">new</span> <span class="nf">JwtHeader</span><span class="p">(</span><span class="n">credentials</span><span class="p">),</span> <span class="k">new</span> <span class="nf">JwtPayload</span><span class="p">(</span><span class="n">claims</span><span class="p">));</span>
            <span class="kt">string</span> <span class="n">jwt</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">JwtSecurityTokenHandler</span><span class="p">().</span><span class="nf">WriteToken</span><span class="p">(</span><span class="n">jwtSecurity</span><span class="p">);</span>
            <span class="kt">string</span> <span class="n">json</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="k">new</span> <span class="p">{</span> <span class="n">kid</span> <span class="p">=</span> <span class="n">uid</span><span class="p">,</span> <span class="n">jwt_token</span> <span class="p">=</span> <span class="n">jwt</span> <span class="p">});</span>


            <span class="err">#</span><span class="n">region</span> <span class="n">sync_using_HttpWebRequest</span>
            <span class="n">HttpWebRequest</span> <span class="n">webReq</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">@"https://dauth.stage.garantex.biz/api/v1/sessions/generate_jwt"</span><span class="p">);</span>
            <span class="kt">byte</span><span class="p">[]</span> <span class="n">data</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">ASCII</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
            <span class="n">webReq</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span>
            <span class="n">webReq</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">"application/json"</span><span class="p">;</span>
            <span class="n">webReq</span><span class="p">.</span><span class="n">ContentLength</span> <span class="p">=</span> <span class="n">data</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">Stream</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">webReq</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">stream</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">data</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="kt">string</span> <span class="n">respStr</span><span class="p">;</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">HttpWebResponse</span> <span class="n">webResp</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">webReq</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="k">using</span> <span class="p">(</span><span class="n">StreamReader</span> <span class="n">sr</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">webResp</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">()))</span>
                <span class="p">{</span>
                    <span class="n">respStr</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="err">#</span><span class="n">endregion</span> <span class="n">sync_using_HttpWebRequest</span>


            <span class="err">#</span><span class="n">region</span> <span class="n">async_await_using_HttpClient</span>
            <span class="kt">var</span> <span class="n">httpClient</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpClient</span><span class="p">();</span>
            <span class="n">HttpContent</span> <span class="n">content</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">json</span><span class="p">,</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">,</span> <span class="s">"application/json"</span><span class="p">);</span>
            <span class="n">HttpResponseMessage</span> <span class="n">hrm</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">PostAsync</span><span class="p">(</span><span class="s">@"https://dauth.stage.garantex.biz/api/v1/sessions/generate_jwt"</span><span class="p">,</span> <span class="n">content</span><span class="p">);</span>
            <span class="n">HttpStatusCode</span> <span class="n">httpStatus</span> <span class="p">=</span> <span class="n">hrm</span><span class="p">.</span><span class="n">StatusCode</span><span class="p">;</span>
            <span class="err">#</span><span class="n">endregion</span> <span class="n">async_await_using_HttpClient</span>


            <span class="n">Console</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Не забудьте заменить private_key и uid на значения полученные при создании API ключей!</p>
</blockquote>

<p>Garantex использует стандартную схему JWT авторизации (документация: <a href="https://jwt.io/">https://jwt.io/</a> и <a href="https://tools.ietf.org/html/rfc7519">https://tools.ietf.org/html/rfc7519</a>), то есть для работы с методами API вначале нужно запросить у сервера JWT токен, который уже будет использоваться в Bearer аутентификации.</p>

<p>Полученный токен нужно сохранить и использовать его для запросов. Не нужно создавать новый токен на каждый запрос!<br>
Время жизни JWT токена ограничено, и после его истечения токен становится недействительным. </p>

<p>Время жизни JWT определяется <em>параметрами API ключа</em>, и может быть изменено в настройках для каждого API ключа.
Минимальное время жизни JWT 30 минут, максимальное 24 часа. По умолчанию значение TTL 24 часа.   </p>

<p>Справа приведены примеры кода для получения токена на Ruby, PHP и NodeJS.</p>

<p>Параметры JWT запроса:</p>

<ul>
<li>exp - опциональный, время жизни JWT запроса. Не устанавливать его слишком большим и не оставляйте пустым, если вы не планируете переиспользовать запрос многократно.</li>
<li>jti - обязательный, уникальный идентификатор запроса.</li>
<li>алгоритм подписи JWT - <strong>RS256</strong></li>
<li>все остальные опциональные параметры не используются и устанавливать их не обязательно.</li>
</ul>

<p>Для тестов можно использовать форму получения JWT токена на сайте, по адресу:</p>

<ul>
<li><a href="https://stage.garantex.biz/api_test">https://stage.garantex.biz/api_test</a> - стейдж, тестовый сервер. </li>
<li><a href="https://garantex.io/api_test">https://garantex.io/api_test</a> - продакшн, боевой сервер.</li>
</ul>

<p>Для декодирования и проверки токенов можно использовать онлайн отладчик на сайте <a href="https://jwt.io/">https://jwt.io/</a></p>

<aside class="notice">
Не забудьте заменить private_key и uid в примерах на значения полученные при создании API ключей!
</aside>

<aside class="notice">
Ключи полученные на тестовом сервере (https://stage.garantex.biz/) будут работать только на тестовом сервере, а продакшн ключи (https://garantex.io/) - только на продакшне!
</aside>
<h2 id='ce7d35ddc5'>Авторизация запросов</h2>
<blockquote>
<p>Пример GET-запроса (запрос информации об аккаунте):<br>
{JWT} - токен, полученный на предыдущем шаге</p>
</blockquote>
<div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {JWT}'</span> <span class="s1">'https://stage.garantex.biz/api/v2/members/me'</span>
</code></pre></div><div class="highlight"><pre class="highlight ruby tab-ruby"><code><span class="nb">require</span> <span class="s1">'net/http'</span>
<span class="nb">require</span> <span class="s1">'net/https'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">host</span> <span class="o">=</span> <span class="s1">'garantex.io'</span> <span class="c1"># для тестового сервера используйте stage.garantex.biz</span>
<span class="n">token</span> <span class="o">=</span> <span class="s1">'{JWT}'</span>
<span class="n">custom_headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s2">"Bearer </span><span class="si">#{</span><span class="n">token</span><span class="si">}</span><span class="s2">"</span><span class="p">}</span>
<span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s2">"https://</span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2">/api/v2/members/me"</span><span class="p">)</span>

<span class="n">response</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="p">.</span><span class="nf">start</span> <span class="n">uri</span><span class="p">.</span><span class="nf">hostname</span><span class="p">,</span> <span class="n">uri</span><span class="p">.</span><span class="nf">port</span><span class="p">,</span> <span class="ss">use_ssl: </span><span class="kp">true</span> <span class="k">do</span> <span class="o">|</span><span class="n">http</span><span class="o">|</span>
  <span class="n">request</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">::</span><span class="no">Get</span><span class="p">.</span><span class="nf">new</span> <span class="n">uri</span><span class="p">.</span><span class="nf">request_uri</span>
  <span class="n">custom_headers</span><span class="p">.</span><span class="nf">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="n">request</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span> <span class="p">}</span>
  <span class="n">http</span><span class="p">.</span><span class="nf">request</span> <span class="n">request</span>
<span class="k">end</span>

<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTPResponse</span> <span class="o">===</span> <span class="n">response</span> <span class="c1"># Error occured</span>
<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTPOK</span> <span class="o">===</span> <span class="n">response</span> <span class="c1"># HTTP error with code</span>
<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">body</span> <span class="c1"># Response is empty</span>

<span class="n">account_info</span> <span class="o">=</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span> <span class="n">response</span><span class="p">.</span><span class="nf">body</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

<span class="nv">$host</span>   <span class="o">=</span> <span class="s1">'garantex.io'</span><span class="p">;</span> <span class="c1">// для тестового сервера используйте stage.garantex.biz</span>
<span class="nv">$token</span>  <span class="o">=</span> <span class="s1">'{JWT}'</span><span class="p">;</span>

<span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="s1">'https://'</span> <span class="o">.</span> <span class="nv">$host</span> <span class="o">.</span> <span class="s1">'/api/v2/members/me'</span><span class="p">);</span>

<span class="nb">curl_setopt_array</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="p">[</span>
    <span class="nx">CURLOPT_HTTPHEADER</span>     <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">'Authorization: Bearer '</span> <span class="o">.</span> <span class="nv">$token</span><span class="p">],</span>
    <span class="nx">CURLOPT_RETURNTRANSFER</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
<span class="p">]);</span>

<span class="nv">$response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLINFO_HTTP_CODE</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">)</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">'Server error: '</span> <span class="o">.</span> <span class="nv">$response</span><span class="p">);</span>

<span class="nv">$account_info</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

<span class="nb">var_dump</span><span class="p">([</span><span class="s1">'$account_info'</span> <span class="o">=&gt;</span> <span class="nv">$account_info</span><span class="p">]);</span>

</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">host</span>   <span class="o">=</span> <span class="s">'garantex.io'</span> <span class="o">//</span> <span class="n">для</span> <span class="n">тестового</span> <span class="n">сервера</span> <span class="n">используйте</span> <span class="n">stage</span><span class="p">.</span><span class="n">garantex</span><span class="p">.</span><span class="n">biz</span>
<span class="n">token</span>  <span class="o">=</span> <span class="s">'{JWT}'</span>

<span class="n">ret</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://'</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="s">'/api/v2/members/me'</span><span class="p">,</span>
                   <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer '</span> <span class="o">+</span> <span class="n">token</span><span class="p">})</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Test request response code: %d"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">status_code</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Test request response text: %s"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">ret</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
</code></pre></div>
<blockquote>
<p>Пример POST-запроса (создание вывода в код Garantex):<br>
{JWT} - токен, полученный на предыдущем шаге<br>
{currency} - код фиатной валюты, например rub<br>
{amount} - сумма вывода, например 10000</p>
</blockquote>
<div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span> POST <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {JWT}'</span> <span class="nt">-H</span> <span class="s1">'Content-Type: application/x-www-form-urlencoded'</span> <span class="nt">-d</span> <span class="s1">'currency={currency}&amp;amount={amount}'</span> <span class="s1">'https://stage.garantex.biz/api/v2/depositcodes/create'</span>
</code></pre></div><div class="highlight"><pre class="highlight ruby tab-ruby"><code><span class="nb">require</span> <span class="s1">'net/http'</span>
<span class="nb">require</span> <span class="s1">'net/https'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">host</span> <span class="o">=</span> <span class="s1">'garantex.io'</span> <span class="o">/</span><span class="sr">/ для тестового сервера используйте stage.garantex.biz
token = '{JWT}'
currency = '{currency}'
amount = '{amount}'
custom_headers = {'Authorization' =&gt; "Bearer </span><span class="si">#{</span><span class="n">token</span><span class="si">}</span><span class="sr">"}
uri = URI.parse("https:/</span><span class="o">/</span><span class="c1">#{host}/api/v2/depositcodes/create")</span>

<span class="n">response</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="p">.</span><span class="nf">start</span> <span class="n">uri</span><span class="p">.</span><span class="nf">hostname</span><span class="p">,</span> <span class="n">uri</span><span class="p">.</span><span class="nf">port</span><span class="p">,</span> <span class="ss">use_ssl: </span><span class="kp">true</span> <span class="k">do</span> <span class="o">|</span><span class="n">http</span><span class="o">|</span>
  <span class="n">request</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">::</span><span class="no">Post</span><span class="p">.</span><span class="nf">new</span> <span class="n">uri</span><span class="p">.</span><span class="nf">request_uri</span>
  <span class="n">custom_headers</span><span class="p">.</span><span class="nf">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="n">request</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span> <span class="p">}</span>
  <span class="n">request</span><span class="p">.</span><span class="nf">set_form_data</span><span class="p">({</span> <span class="ss">currency: </span><span class="n">currency</span><span class="p">,</span> <span class="ss">amount: </span><span class="n">amount</span> <span class="p">})</span>
  <span class="n">http</span><span class="p">.</span><span class="nf">request</span> <span class="n">request</span>
<span class="k">end</span>

<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTPResponse</span> <span class="o">===</span> <span class="n">response</span> <span class="c1"># Error occured</span>
<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTPCreated</span> <span class="o">===</span> <span class="n">response</span> <span class="c1"># HTTP error with code</span>
<span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="n">response</span><span class="p">.</span><span class="nf">body</span> <span class="c1"># Response is empty</span>

<span class="n">depositcode_data</span> <span class="o">=</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span> <span class="n">response</span><span class="p">.</span><span class="nf">body</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

<span class="nv">$host</span> <span class="o">=</span> <span class="s1">'garantex.io'</span><span class="p">;</span> <span class="c1">// для тестового сервера используйте stage.garantex.biz</span>
<span class="nv">$token</span> <span class="o">=</span> <span class="s1">'{JWT}'</span><span class="p">;</span>
<span class="nv">$currency</span> <span class="o">=</span> <span class="s1">'{currency}'</span><span class="p">;</span>
<span class="nv">$amount</span> <span class="o">=</span> <span class="s1">'{amount}'</span><span class="p">;</span>

<span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="s1">'https://'</span> <span class="o">.</span> <span class="nv">$host</span> <span class="o">.</span> <span class="s1">'/api/v2/depositcodes/create'</span><span class="p">);</span>

<span class="nb">curl_setopt_array</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="p">[</span>
    <span class="nx">CURLOPT_HTTPHEADER</span>     <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">'Authorization: Bearer '</span> <span class="o">.</span> <span class="nv">$token</span><span class="p">],</span>
    <span class="nx">CURLOPT_RETURNTRANSFER</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nx">CURLOPT_POST</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="nx">CURLOPT_POSTFIELDS</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="s1">'currency'</span> <span class="o">=&gt;</span> <span class="nv">$currency</span><span class="p">,</span> <span class="s1">'amount'</span> <span class="o">=&gt;</span> <span class="nv">$amount</span><span class="p">],</span>
<span class="p">]);</span>

<span class="nv">$response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLINFO_HTTP_CODE</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">201</span><span class="p">)</span>
    <span class="k">die</span><span class="p">(</span><span class="s1">'Server error: '</span> <span class="o">.</span> <span class="nv">$response</span><span class="p">);</span>

<span class="nv">$depositcode_data</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>

<span class="nb">var_dump</span><span class="p">([</span><span class="s1">'$depositcode_data'</span> <span class="o">=&gt;</span> <span class="nv">$depositcode_data</span><span class="p">]);</span>

</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">host</span>     <span class="o">=</span> <span class="s">'garantex.io'</span> <span class="o">//</span> <span class="n">для</span> <span class="n">тестового</span> <span class="n">сервера</span> <span class="n">используйте</span> <span class="n">stage</span><span class="p">.</span><span class="n">garantex</span><span class="p">.</span><span class="n">biz</span>
<span class="n">token</span>    <span class="o">=</span> <span class="s">'{JWT}'</span>
<span class="n">currency</span> <span class="o">=</span> <span class="s">'{currency}'</span>
<span class="n">amount</span>   <span class="o">=</span> <span class="s">'{amount}'</span>

<span class="n">ret</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://'</span> <span class="o">+</span> <span class="n">host</span> <span class="o">+</span> <span class="s">'/api/v2/depositcodes/create'</span><span class="p">,</span>
                   <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer '</span> <span class="o">+</span> <span class="n">token</span><span class="p">},</span>
                   <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s">'currency'</span><span class="p">:</span> <span class="n">currency</span><span class="p">,</span> <span class="s">'amount'</span><span class="p">:</span> <span class="n">amount</span><span class="p">})</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Test request response code: %d"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">status_code</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Test request response text: %s"</span> <span class="o">%</span> <span class="n">ret</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">ret</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
</code></pre></div>
<p>Для запроса данных через API Garantex необходимо использовать <a href="https://tools.ietf.org/html/rfc6750#section-2.1">OAuth 2.0 Bearer аутентификацию</a>.</p>
